{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "75a2d5b3-1778-45d0-b2b1-9d51f8e76f12",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cbe55ada-6350-4393-b7d9-281fc30dd997",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-1.33449172 -0.83992732 -1.54183039 -1.20550151 -0.80013461]\n",
      " [-1.16690207 -1.66469342 -1.43946463 -1.44029123 -1.11938044]\n",
      " [-1.35792531 -1.65018932 -0.97650874 -1.42213066 -0.79038602]\n",
      " [-0.96689833 -0.83945622 -0.77240233 -1.14648337 -1.29824189]\n",
      " [-1.45423678 -1.73423846 -1.6417683  -0.89676324 -1.26762967]]\n"
     ]
    }
   ],
   "source": [
    "#Create a random 5x5 ndarray and store it in variable x\n",
    "x = np.random.random((5,5))\n",
    "#Normalize x using the given formula\n",
    "z = ( x - np.mean(x) / np.std(x))\n",
    "#Print the normalized x\n",
    "print (z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2c2489a-2e0b-4275-b7a6-68ac2d0552ea",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
